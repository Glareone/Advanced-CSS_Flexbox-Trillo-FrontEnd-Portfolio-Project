// ============================================= HEADER: LOGO ==========================================================
.logo {
  height: 3.25rem;
  margin-left: 3rem;
}

// ============================================= HEADER: SEARCH BOX ====================================================
.search {
  display: flex;
  flex: 0 0 40%;
  align-items: center;
  justify-content: center;


  &__input {
    font-family: inherit;
    font-size: inherit;
    color: inherit;
    background-color: var(--color-grey-light-2);
    border: none;
    padding: .7rem 2rem;
    border-radius: 100px;
    width: 90%;
    transition: all .2s;
    margin-right: -3.25rem;

    &:focus {
      outline: none;
      width: 100%;
      background-color: var(--color-grey-light-3);
    }

    &::-webkit-input-placeholder {
      font-weight: 100;
      color: var(--color-grey-light-4);
    }

  }

  &__input:focus + &__button {
    background-color: var(--color-grey-light-3);
  }

  &__button {
    border: none;
    background-color: var(--color-grey-light-2);

    &:focus {
      outline: none;
    }

    &:active {
      transform: translateY(2px);
    }
  }

  &__icon {
    height: 2rem;
    width: 2rem;
    fill: var(--color-grey-dark-3);
  }
}

// ========================================== HEADER: USER NAVIGATION ==================================================
.user-nav {
  display: flex;
  align-items: center;
  align-self: stretch; // increase the height of right header part

  & > * { // select all direct children
    display: flex;
    align-items: center;
    padding: 0 2rem;
    cursor: pointer;
    height: 100%;
  }

  & > *:hover {
    background-color: var(--color-grey-light-2);
  }

  &__icon-box {
    position: relative;
  }

  &__icon {
    height: 2.25rem;
    width: 2.25rem;
    fill: var(--color-grey-dark-2);
  }

  &__notification {
    display: flex;
    justify-content: center; // numbers in circles
    align-items: center;

    position: absolute;
    top: 1.85rem;
    right: 1.1rem;

    font-size: .8rem;
    height: 1.75rem;
    width: 1.75rem;
    border-radius: 50%;
    background-color: var(--color-primary);
    color: #FFF;
  }

  &__user-photo {
    height: 3.75rem;
    margin-right: 1rem;
    border-radius: 50%;
  }
}

// ============================================= NAVIGATION: SIDE ======================================================
.side-nav {
  font-size: 1.4rem;
  list-style: none;
  margin-top: 3.5rem;

  &__item {
    position: relative;

    &:not(:last-child) {
      margin-bottom: .5rem;
    }
  }

  &__item:before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 3px;
    background-color: var(--color-primary);
    transform: scaleY(0);
    // transform-origin: bottom; // will start scaling not from the center of nav element, but from the bottom of the element.
    // will comment it because we will use default value - center;
    transition: transform .2s,
                width .4s cubic-bezier(1, 0, 0, 1) .2s, // width transition ( on X direction)
                background-color .1s; // we need to set this transition because out background-color was specified for before pseudo element

  }

  &__item:hover::before, &__item--active::before {
    transform: scaleY(1); // scaling on Y direction
    width: 100%; // set the width which element should get on hover
  }

  &__item:active::before {
    background-color: var(--color-primary-light);
  }

  &__link:link,
  &__link:visited {
    color: var(--color-grey-light-1);
    text-decoration: none;
    text-transform: uppercase;
    padding: 1.5rem 3rem;
    position: relative;
    z-index: 10; // we need to specify z-index and position to display nav items above the hover transformation

    display: flex;
    align-items: center;
  }

  &__icon {
    width: 1.75rem;
    height: 1.75rem;
    margin-right: 2rem;
    fill: currentColor; // the color of current element or parent element. WIll get a color from link. (light-1)
    // if we will setup color exactly here (i mean in __icon) - currentColor will get this color instead of color from link
    // if we set color for hovering link (i mean &__link:hover) - icon will get this color on hovering. Very useful
  }
}

// ========================================== NAVIGATION: LEGAL TEXT ===================================================
.legal {
  font-size: 1.2rem;
  color: var(--color-grey-light-4);
  text-align: center;
  padding: 2.5rem;
}

// ========================================= MAIN PAGE: GALLERY ========================================================
.gallery {
  display: flex;

  &__photo {
    width: 100%;
    display: block;
  }
}

// ====================================== MAIN PAGE: HOTEL OVERVIEW ====================================================
.overview {
  display: flex;
  align-items: center;
  border-bottom: var(--line);

  &__heading {
    font-size: 2.25rem;
    font-weight: 300;
    text-transform: uppercase;
    letter-spacing: 1px;
    padding: 1.5rem 3rem;
  }

  &__stars {
    // stars will occupy all free space in row and it will be very close to what we want.
    // But all this space will have all our styles from stars (for example cursor: pointer) and it is not what we really
    // want. That's why better to use margin-right to occupy all free space but by margin of the stars container.
    //flex: 1;
    margin-right: auto;
    display: flex;
  }

  &__icon-star,
  &__icon-location {
    width: 1.75rem;
    height: 1.75rem;
    fill: var(--color-primary);
  }

  &__location {
    font-size: 1.2rem;
    display: flex;
    align-items: center;
  }

  &__icon-location {
    margin-right: 1.5rem;
  }

  &__rating {
    display: flex;

    align-items: center; // positioning elements inside rating (8.6 and 429 votes)
    justify-content: center;
    flex-direction: column;

    align-self: stretch; // to occupy all height by overriding align-items:center from parent
    background-color: var(--color-primary);
    margin-left: 3rem;
    color: #FFF;
    padding: 0 3.25rem;
  }

  &__rating-count {
    font-size: .8rem;
    text-transform: uppercase;
    margin-top: -5px;
  }

  &__rating-average {
    font-size: 2.25rem;
    font-weight: 300;
  }
}

// ====================================== MAIN PAGE: BUTTON INLINE =====================================================
.button-inline {
  border: none;
  color: var(--color-primary);
  font-size: inherit; // we do it to make this element flexible because it will be used not only as "location" text,
  // but also as "Show all ->" button. This buttons should have different font-sizes. Will be more reusable.
  border-bottom: 1px solid currentColor; // currentColor will get color from itself.
  padding-bottom: 2px;
  display: inline-block;
  background-color: transparent;
  cursor: pointer;
  transition: all .2s; // changing color on hover will be with tiny delay.

  &:hover {
    color: var(--color-grey-dark-1);
  }

  &:focus {
    outline: none;
    animation: pulsate 1s infinite; // infinite animation using keyframes
  }
}

@keyframes pulsate {
  0% {
    transform: scale(1);
    box-shadow: none;
  }

  50% {
    transform: scale(1.05);
    box-shadow: 0 1rem 4rem rgba(0, 0, 0, .25);
  }

  100% {
    transform: scale(1);
    box-shadow: none;
  }
}

// ======================================== MAIN PAGE: PARAGRAPH =======================================================
.paragraph:not(:last-of-type) { // last of this particular type
  margin-bottom: 2rem;
}

// ========================================== MAIN PAGE: LIST ==========================================================
.list {
  display: flex;
  flex-wrap: wrap; // move element to the next line if overflowing the current one. With setting the width for every
  // element we could organize two columns

  &__item {
    // we set 50% of width because we want two elements side by side. We organize two columns by using this little trick
    flex: 0 0 50%;
    margin-bottom: .7rem;
  }

  &__item::before { // to create and use svg directly from css code we have to use here, in pseudo element
    content: "";
    display: inline-block;
    height: 1rem;
    width: 1rem;
    margin-right: .7rem;
    // For old browsers
    // if we use background image there is no way to change the svg color.
    // it doesn't work for old browsers.
    //background-image: url("../img/chevron-thin-right.svg");
    //background-size: cover;

    // For modern browsers we could use masks
    background-color: var(--color-primary);
    -webkit-mask-image: url("../img/chevron-thin-right.svg"); // it still doesn't work without webkit prefix.
    -webkit-mask-size: cover; // works like clip-path :) without it our image won't work, we will see only pink rectangles
    // also without size: cover we can't make svg smaller, it will show svg partially.
  }

  list-style: none;
  margin: 3rem 0;
  padding: 3rem 0;
  border-top: var(--line);
  border-bottom: var(--line);

}
// ======================================== MAIN PAGE: RECOMMEND =======================================================
.recommend {
  display: flex;
  align-items: center;

  font-size: 1.3rem;
  color: var(--color-grey-dark-3);

  &__count {
    margin-right: auto;
  }

  &__friends {

  }

  &__photo {
    height: 4rem;
    width: 4rem;
    border-radius: 50%;
    box-sizing: content-box; // we set it here because if we add border - our images become smaller (they shrink).
    // adding box-sizing we tell browser that it size should be based on content without border or padding.
    border: 3px solid #FFF;

    &:not(:last-child) {
      margin-right: -1.5rem;
    }
  }
}